// INITIALIZE TERMINAL
CLEARSCREEN.
SET TERMINAL:CHARWIDTH TO 12.
SET TERMINAL:CHARHEIGHT TO 12.
SET TERMINAL:WIDTH TO 20.
SET TERMINAL:HEIGHT TO 8.
SET MAJOR_MODE TO 0.
SET MINOR_MODE TO 0.

// OPEN A NEW DATA FILE
SET ID to 1.
UNTIL NOT EXISTS("DATA" + ID + ".CSV") {
    SET ID to ID + 1.
}
SET DATAFILE TO CREATE("DATA" + ID + ".CSV").

// SCAN ALL SENSORS
SET SENSOR_NAMES TO LIST().
SET SENSORS TO LIST().
SET SENSOR_POS TO LIST().
FOR PART IN SHIP:PARTS {
	SET PREFIX TO "".
	
	IF (PART:NAME = "sensorThermometer")	{ SET PREFIX TO "T_". }
	IF (PART:NAME = "sensorAccelerometer")	{ SET PREFIX TO "A_". }

	IF PREFIX <> "" {
		SET SENSOR_NAME TO PREFIX + PART:TAG.
		SET SENSOR_POSITION TO (-SHIP:FACING) * (PART:POSITION - SHIP:ROOTPART:POSITION).
	
		// ADD THE SENSOR SO LIST IS SORTED
		FOR IDX IN RANGE(SENSOR_NAMES:LENGTH) {
			IF SENSOR_NAME < SENSOR_NAMES[IDX] {
				SENSOR_NAMES:INSERT(IDX, SENSOR_NAME).
				SENSORS:INSERT(IDX, PART).
				SENSOR_POS:INSERT(IDX, SENSOR_POSITION).
				BREAK.
			}
		}
		IF NOT SENSOR_NAMES:CONTAINS(SENSOR_NAME) {
			SENSOR_NAMES:ADD(SENSOR_NAME).
			SENSORS:ADD(PART).
			SENSOR_POS:ADD(SENSOR_POSITION).
		}
	}
}

// FOR DOWNRANGE
SET RUNWAY TO LATLNG(-0.0486, -74.6848).

// SET UP GPC TELEMETRY SLOTS
SET GPC_VARS TO LIST(0,0,0,0,0,0,0,0,0,0).
SET PREV_GPC_VARS TO LIST(0,0,0,0,0,0,0,0,0,0).

// PRINT FILE HEADER
DATAFILE:WRITE("TIME,").
DATAFILE:WRITE("DOWNRANGE,").
DATAFILE:WRITE("VELOCITY,").
DATAFILE:WRITE("ALTITUDE,").
FOR IDX IN RANGE(GPC_VARS:LENGTH) {
	DATAFILE:WRITE("GPC" + IDX + ",").
}
FOR IDX IN RANGE(SENSOR_NAMES:LENGTH) {
	PRINT "SENSOR " + SENSOR_NAMES[IDX].
	DATAFILE:WRITE(SENSOR_NAMES[IDX] + ",").
}
DATAFILE:WRITELN("0").

// START LOGGING
WAIT 1.0.
CLEARSCREEN.
PRINT "MODULAR DATA SYSTEM" AT (0,0).
PRINT "    ACTIVE:" AT (0,2).
PRINT "      FILE:" AT (0,3).
PRINT "     INDEX:" AT (0,4).
PRINT "FREE SPACE:" AT (0,5).
PRINT "  CAPACITY:" AT (0,6).

// TOGGLE MADS
SET ACTIVE TO FALSE.
ON AG6 {
	TOGGLE ACTIVE.
	PRESERVE.
}

// KEEP WRITING TELEMETRY DATA
SET NUM TO 0.
SET NUM_TEMP TO 0.
UNTIL FALSE {
	// UPDATE TELEMETRY FROM GPC
	UNTIL CORE:MESSAGES:EMPTY {
		SET MESSAGE TO CORE:MESSAGES:POP:CONTENT.
		SET GPC_IDX TO UNCHAR(MESSAGE:SUBSTRING(0, 1)) - UNCHAR("0").
		SET GPC_VAL TO MESSAGE:SUBSTRING(2, MESSAGE:LENGTH-2).
		
		SET GPC_VARS[GPC_IDX] TO GPC_VAL.
		IF GPC_IDX = 0 {
			IF GPC_VAL = "11" { SET ACTIVE TO TRUE. }
			IF GPC_VAL = "20" { SET ACTIVE TO FALSE. }
		}
	}

	// QUERY ALL SENSORS AND WRITE DATA
	IF ACTIVE {
		DATAFILE:WRITE(ROUND(TIME:SECONDS,2)+",").
		DATAFILE:WRITE(ROUND(RUNWAY:DISTANCE,0)+",").
		DATAFILE:WRITE(ROUND(AIRSPEED,0)+",").
		DATAFILE:WRITE(ROUND(SHIP:ALTITUDE,0)+",").
		FOR IDX IN RANGE(GPC_VARS:LENGTH) {
			IF GPC_VARS[IDX] <> PREV_GPC_VARS[IDX] {
				DATAFILE:WRITE(GPC_VARS[IDX] + ",").
			} ELSE {
				DATAFILE:WRITE(",").
			}
			SET PREV_GPC_VARS[IDX] TO GPC_VARS[IDX].
		}
		FOR IDX IN RANGE(SENSOR_NAMES:LENGTH) {
			IF SENSORS[IDX]:MODULES:CONTAINS("ModuleEnviroSensor") {
				SET VALUE TO SENSORS[IDX]:GETMODULE("ModuleEnviroSensor"):GETFIELD("display").
				IF VALUE = "OFF" {
					SENSORS[IDX]:GETMODULE("ModuleEnviroSensor"):DOACTION("toggle display", TRUE ).
					SET VALUE TO "0u".
				}
				IF SENSORS[IDX]:TAG:CONTAINS("RA") {
					SET SENSOR_POSITION TO (-SHIP:FACING) * (SENSORS[IDX]:POSITION - SHIP:ROOTPART:POSITION).
					SET STRAIN TO (SENSOR_POSITION - SENSOR_POS[IDX]):MAG*100000.
					IF STRAIN > 99999 {
						SET STRAIN TO 99999.
					}
					SET VALUE TO ROUND(STRAIN, 0) + "u".
				}
				
				IF SENSOR_NAMES[IDX]:CONTAINS("T_") AND (NUM_TEMP <> 0) {
					DATAFILE:WRITE(",").
				} ELSE {
					DATAFILE:WRITE(VALUE:SUBSTRING(0,VALUE:LENGTH-1) + ",").
				}
			} ELSE {
				DATAFILE:WRITE(",").
			}
		}
		DATAFILE:WRITELN("0").
		SET NUM TO NUM + 1.
		SET NUM_TEMP TO NUM_TEMP + 1.
		IF NUM_TEMP > 5 {
			SET NUM_TEMP TO 0.
		}
	}
	
	// PRINT STATUS
	IF ACTIVE {
		PRINT "ON " AT (12,2).
	} ELSE {
		PRINT "OFF" AT (12,2).
	}
	PRINT ID AT (12,3).
	PRINT NUM AT (12,4).
	PRINT "      " AT (12,5).
	PRINT (PROCESSOR("MADS"):VOLUME():FREESPACE+""):PADLEFT(7) AT (12,5).
	PRINT (PROCESSOR("MADS"):VOLUME():CAPACITY+""):PADLEFT(7) AT (12,6).
	
	// WRITE DELAY
	//WAIT 0.0.
	WAIT 0.5.
}