////////////////////////////////////////////////////////////////////////////////
// EVENT SUBSYSTTEM
////////////////////////////////////////////////////////////////////////////////
// EVENT NAMES
SET EVENT_SYS_DEBUG			TO 1.
SET EVENT_LIFTOFF			TO 7.
SET EVENT_LOW_RCS			TO 8.
SET EVENT_LOW_OMS			TO 9.
SET EVENT_LOW_CHARGE		TO 10.
SET EVENT_CPU_OVERTIME		TO 11.

// EVENT STORAGE
SET EVENT_ACK TO TRUE.
SET EVENT0_CODE TO 0.
SET EVENT1_CODE TO 0.
SET EVENT2_CODE TO 0.
SET EVENT3_CODE TO 0.
SET EVENT4_CODE TO 0.
SET EVENT5_CODE TO 0.
SET EVENT0_TIME TO MISSIONTIME.
SET EVENT1_TIME TO MISSIONTIME.
SET EVENT2_TIME TO MISSIONTIME.
SET EVENT3_TIME TO MISSIONTIME.
SET EVENT4_TIME TO MISSIONTIME.
SET EVENT5_TIME TO MISSIONTIME.

// PUSH A SINGLE EVENT ON EVENT QUEUE
FUNCTION PUSH_EVENT {
	PARAMETER EVENT.
	
	SET EVENT5_TIME TO EVENT4_TIME.
	SET EVENT4_TIME TO EVENT3_TIME.
	SET EVENT3_TIME TO EVENT2_TIME.
	SET EVENT2_TIME TO EVENT1_TIME.
	SET EVENT1_TIME TO EVENT0_TIME.
	SET EVENT0_TIME TO MISSIONTIME.
	SET EVENT5_CODE TO EVENT4_CODE.
	SET EVENT4_CODE TO EVENT3_CODE.
	SET EVENT3_CODE TO EVENT2_CODE.
	SET EVENT2_CODE TO EVENT1_CODE.
	SET EVENT1_CODE TO EVENT0_CODE.
	SET EVENT0_CODE TO EVENT.
	SET EVENT_ACK TO FALSE.
}.

// PRINT AN EVENT
FUNCTION PRINT_EVENT {
	PARAMETER CODE.
	PARAMETER X.
	PARAMETER Y.
	
	IF CODE < 10 {
		PRINT "000" AT (X,Y).
		PRINT CODE AT (X+2,Y).
	} ELSE IF CODE < 100 {
		PRINT "000" AT (X,Y).
		PRINT CODE AT (X+1,Y).
	} ELSE {
		PRINT CODE AT (X,Y).
	}

	     IF CODE = 0   { PRINT "        " AT (X+3,Y). }
	ELSE IF CODE = 1   { PRINT "SYS_DEBG" AT (X+3,Y). }
	ELSE IF CODE = 2   { PRINT "CHG_MM0 " AT (X+3,Y). }
	ELSE IF CODE = 3   { PRINT "CH_MM1  " AT (X+3,Y). }
	ELSE IF CODE = 4   { PRINT "CH_MM2  " AT (X+3,Y). }
	ELSE IF CODE = 5   { PRINT "CH_MM3  " AT (X+3,Y). }
	ELSE IF CODE = 6   { PRINT "CH_MINOR" AT (X+3,Y). }
	ELSE IF CODE = 7   { PRINT "LIFTOFF " AT (X+3,Y). }
	ELSE IF CODE = 8   { PRINT "LOW RCS " AT (X+3,Y). }
	ELSE IF CODE = 9   { PRINT "LOW OMS " AT (X+3,Y). }
	ELSE IF CODE = 10  { PRINT "LOW ECHG" AT (X+3,Y). }
	ELSE			   { PRINT "UNK     " AT (X+3,Y). }
}

// SHOW EVENT SCREEN
FUNCTION UI_EVENTSCREEN {
	IF (NOT EVENT_ACK) AND (NOT ENTERING_COMMAND) {
		PRINT "EVT"  AT (0,1).
		PRINT "            "  AT (12,1).
		PRINT_TIME(EVENT0_TIME,4,1).
		PRINT_EVENT(EVENT0_CODE,13,1).
	}

	IF SCREEN = 1 {
		PRINT "    EVENT BUFFER        "  AT (0,3).
		PRINT "    TIME     ID NAME    "  AT (0,4).
	
		LOCAL Y IS 5.
		PRINT "EV0 00:00:00            "  AT (0,Y+0).
		PRINT_TIME(EVENT0_TIME,4,Y+0).
		PRINT_EVENT(EVENT0_CODE,13,Y+0).
		
		PRINT "EV1 00:00:00            "  AT (0,Y+1).
		PRINT_TIME(EVENT1_TIME,4,Y+1).
		PRINT_EVENT(EVENT1_CODE,13,Y+1).
		
		PRINT "EV2 00:00:00            "  AT (0,Y+2).
		PRINT_TIME(EVENT2_TIME,4,Y+2).
		PRINT_EVENT(EVENT2_CODE,13,Y+2).
		
		PRINT "EV3 00:00:00            "  AT (0,Y+3).
		PRINT_TIME(EVENT3_TIME,4,Y+3).
		PRINT_EVENT(EVENT3_CODE,13,Y+3).
		
		PRINT "EV4 00:00:00            "  AT (0,Y+4).
		PRINT_TIME(EVENT3_TIME,4,Y+4).
		PRINT_EVENT(EVENT3_CODE,13,Y+4).
		
		PRINT "EV5 00:00:00            "  AT (0,Y+5).
		PRINT_TIME(EVENT3_TIME,4,Y+5).
		PRINT_EVENT(EVENT3_CODE,13,Y+5).
		
		SET UI_UPDATE TO FALSE.
	}
}.